# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-10-02 11:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('entid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('mainname', models.CharField(max_length=200, unique=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'entities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Existinglanguages',
            fields=[
                ('langid', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('languagenameinenglish', models.CharField(max_length=100, unique=True)),
                ('languagenamebyitself', models.CharField(max_length=100, unique=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'existinglanguages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExistingPhrases',
            fields=[
                ('phraseid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('phrasestring', models.CharField(max_length=200, unique=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'existing_phrases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewTable',
            fields=[
                ('new_table_fld', models.SmallIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'new_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Typesofentities',
            fields=[
                ('enttypeid', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('enttypename', models.CharField(max_length=100, unique=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'typesofentities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntitiesAlternateNames',
            fields=[
                ('eid', models.ForeignKey(db_column='eid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='search_in_database.Entities')),
                ('drowid', models.BigIntegerField()),
                ('alternatename', models.CharField(max_length=200)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'entities_alternate_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Entitiesrelatedphrases',
            fields=[
                ('entid', models.ForeignKey(db_column='entid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='search_in_database.Entities')),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'entitiesrelatedphrases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntityRelationEntity',
            fields=[
                ('eid1', models.ForeignKey(db_column='eid1', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='EntityRelationEntity_eid1_set', serialize=False, to='search_in_database.Entities')),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'entity_relation_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntsBlobPropsValues',
            fields=[
                ('prop_owner_eid', models.ForeignKey(db_column='prop_owner_eid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='EntsBlobPropsValues_prop_owner_eid_set', serialize=False, to='search_in_database.Entities')),
                ('drowid', models.IntegerField()),
                ('mimetype', models.CharField(blank=True, max_length=100, null=True)),
                ('dvalue', models.BinaryField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'ents_blob_props_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntsDoublePropsValues',
            fields=[
                ('prop_owner_eid', models.ForeignKey(db_column='prop_owner_eid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='EntsDoublePropsValues_prop_owner_eid_set', serialize=False, to='search_in_database.Entities')),
                ('drowid', models.IntegerField()),
                ('dvalue', models.FloatField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'ents_double_props_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntsIntegerPropsValues',
            fields=[
                ('prop_owner_eid', models.ForeignKey(db_column='prop_owner_eid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='EntsIntegerPropsValues_prop_owner_eid_set', serialize=False, to='search_in_database.Entities')),
                ('drowid', models.IntegerField()),
                ('dvalue', models.BigIntegerField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'ents_integer_props_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntsStringPropsValues',
            fields=[
                ('prop_owner_eid', models.ForeignKey(db_column='prop_owner_eid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='EntsStringPropsValues_prop_owner_eid_set', serialize=False, to='search_in_database.Entities')),
                ('drowid', models.IntegerField()),
                ('dvalue', models.CharField(blank=True, max_length=5000, null=True)),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'ents_string_props_values',
                'managed': False,
            },
        ),
    ]
